" begin plugins
" ------------------------------------------------------------------------------
" Run our plugin manager
call plug#begin('~/.vim/plugged')

Plug 'junegunn/vim-easy-align'
Plug 'bling/vim-airline'
Plug 'tpope/vim-fugitive'

call plug#end()

" Airline plugin
set guifont=Droid\ Sans\ Mono\ for\ Powerline\ 10
let g:airline_powerline_fonts = 1
let g:airline_theme = 'papercolor'

" Fugitive plugin
" Only do this part when compiled with support for autocommands
if has("autocmd")
    augroup vimrcEx
        autocmd!

        " Follow symlinks when opening a file {{{
        " NOTE: this happens with directory symlinks anyway (due to Vim's chdir/getcwd
        "       magic when getting filenames).
        " Sources:
        "  - https://github.com/tpope/vim-fugitive/issues/147#issuecomment-7572351
        "  - http://www.reddit.com/r/vim/comments/yhsn6/is_it_possible_to_work_around_the_symlink_bug/c5w91qw
        function! MyFollowSymlink(...)
            if exists('w:no_resolve_symlink') && w:no_resolve_symlink
                return
            endif
            let fname = a:0 ? a:1 : expand('%')
            if fname =~ '^\w\+:/'
                " Do not mess with 'fugitive://' etc.
                return
            endif
            let fname = simplify(fname)

            let resolvedfile = resolve(fname)
            if resolvedfile == fname
                return
            endif
            let resolvedfile = fnameescape(resolvedfile)
            let sshm = &shm
            set shortmess+=A  " silence ATTENTION message about swap file (would get displayed twice)
            exec 'file ' . resolvedfile
            let &shm=sshm

            " Re-init fugitive.
            call fugitive#detect(resolvedfile)
            if &modifiable
                " Only display a note when editing a file, especially not for `:help`.
                redraw  " Redraw now, to avoid hit-enter prompt.
                echomsg 'Resolved symlink: =>' resolvedfile
            endif
        endfunction
        command! FollowSymlink call MyFollowSymlink()
        command! ToggleFollowSymlink let w:no_resolve_symlink = !get(w:, 'no_resolve_symlink', 0) | echo "w:no_resolve_symlink =>" w:no_resolve_symlink
        au BufReadPost * nested call MyFollowSymlink(expand('%'))
    augroup END
endif

" end plugins
" ------------------------------------------------------------------------------

" be iMproved
set nocompatible

" Turn line numbers on
set nu

" Turn on syntax highlighting
syntax on

" Set color scheme
color miro8

" Make sure the statusline is always on
set laststatus=2

" Default indentation: 4 spaces
set ts=4 sts=4 sw=4 expandtab

" Remap j and k to move up a row instead of a line
" (useful for line wraps)
nnoremap j gj
nnoremap k gk

" Remap <Esc> to jj and kk in insert mode
inoremap jj <Esc>
inoremap kk <Esc>

" Only do this part when compiled with support for autocommands
if has("autocmd")
	" Enable file type detection
	filetype on

	" Syntax of these languages is fussy over tabs vs spaces
	autocmd FileType make setlocal ts=4 sts=4 sw=4 noexpandtab
	autocmd FileType yaml setlocal ts=4 sts=4 sw=4 expandtab

	" Customizations based on house-style (arbitrary)
	autocmd FileType html setlocal ts=4 sts=4 sw=4 expandtab
	autocmd FileType css setlocal ts=4 sts=4 sw=4 expandtab
endif
